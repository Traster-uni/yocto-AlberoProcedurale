==504== Memcheck, a memory error detector
==504== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==504== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==504== Command: bin/ytree_multy
==504== Parent PID: 489
==504== 
==504== Use of uninitialised value of size 8
==504==    at 0x135642: operator- (yocto_math.h:1237)
==504==    by 0x135642: distance (yocto_math.h:1288)
==504==    by 0x135642: yocto::deleteAttractionPoints(yocto::Branch&, yocto::attractionPoints&) (treeToolSet_REFACTOR.cpp:284)
==504==    by 0x1382C0: run(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (ytree_multy.cpp:256)
==504==    by 0x131391: main (ytree_multy.cpp:458)
==504== 
==504== Invalid read of size 4
==504==    at 0x135642: operator- (yocto_math.h:1237)
==504==    by 0x135642: distance (yocto_math.h:1288)
==504==    by 0x135642: yocto::deleteAttractionPoints(yocto::Branch&, yocto::attractionPoints&) (treeToolSet_REFACTOR.cpp:284)
==504==    by 0x1382C0: run(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (ytree_multy.cpp:256)
==504==    by 0x131391: main (ytree_multy.cpp:458)
==504==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==504== 
==504== 
==504== Process terminating with default action of signal 11 (SIGSEGV)
==504==  Access not within mapped region at address 0x0
==504==    at 0x135642: operator- (yocto_math.h:1237)
==504==    by 0x135642: distance (yocto_math.h:1288)
==504==    by 0x135642: yocto::deleteAttractionPoints(yocto::Branch&, yocto::attractionPoints&) (treeToolSet_REFACTOR.cpp:284)
==504==    by 0x1382C0: run(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (ytree_multy.cpp:256)
==504==    by 0x131391: main (ytree_multy.cpp:458)
==504==  If you believe this happened as a result of a stack
==504==  overflow in your program's main thread (unlikely but
==504==  possible), you can try to increase the size of the
==504==  main thread stack using the --main-stacksize= flag.
==504==  The main thread stack size used in this run was 8388608.
==504== 
==504== HEAP SUMMARY:
==504==     in use at exit: 54,777,632 bytes in 96 blocks
==504==   total heap usage: 922 allocs, 826 frees, 130,528,233 bytes allocated
==504== 
==504== LEAK SUMMARY:
==504==    definitely lost: 0 bytes in 0 blocks
==504==    indirectly lost: 0 bytes in 0 blocks
==504==      possibly lost: 1,216 bytes in 4 blocks
==504==    still reachable: 54,776,416 bytes in 92 blocks
==504==         suppressed: 0 bytes in 0 blocks
==504== Rerun with --leak-check=full to see details of leaked memory
==504== 
==504== Use --track-origins=yes to see where uninitialised values come from
==504== For lists of detected and suppressed errors, rerun with: -s
==504== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
